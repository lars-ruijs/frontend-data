// Bundle file generated by Vizhub.com

(function (d3) {
    'use strict';
  
    console.log("Hello");
  
    const svg = d3.select('svg');
  
    const width = +svg.attr('width');
    const height = +svg.attr('height');
  
    const render = data => {
      
      const margin = { top: 50, right: 40, bottom: 80, left: 100 };
      const innerWidth = width - margin.left - margin.right;
        const innerHeight = height - margin.top - margin.bottom;
      
      const xScale = d3.scaleLinear()
          .domain(d3.extent(data, d => d.horsepower))
          .range([0, innerWidth])
          .nice();
      
      const yScale = d3.scaleLinear()
          .domain(d3.extent(data, d => d.weight))
          .range([0, innerHeight])
          .nice();
        
      const g = svg.append('g')
          .attr('transform', `translate(${margin.left}, ${margin.top})`);
      
      const xAxis = d3.axisBottom(xScale)
          .tickSize(-innerHeight)
          .tickPadding(20);
        
        const yAxisG = g.append('g').call(d3.axisLeft(yScale)
        .tickSize(-innerWidth)
          .tickPadding(10));
  
      
      yAxisG.selectAll('.domain').remove();
      
      const xAxisG = g.append('g').call(xAxis)
          .attr('transform', `translate(0, ${innerHeight})`);
      
      xAxisG.select('.domain').remove();
      
      xAxisG.append('text')
      .attr('class', 'axis-label')
      .attr('y', 60)
      .attr('x', innerWidth/2)
      .attr('fill', 'black')
      .text('Horsepower');
      
      yAxisG.append('text')
      .attr('class', 'axis-label')
      .attr('y', -70)
      .attr('x', -innerHeight/2)
      .attr('text-anchor', 'middle')
      .attr('fill', 'black')
      .text('Weight')
      .attr('transform', `rotate(-90)`);
      
      g.selectAll('circle').data(data)
        .enter().append('circle')
              .attr('cy', d => yScale(d.weight))
          .attr('cx', d => xScale(d.horsepower))
              .attr('r', 10);
  
        g.append('text')
      .attr('y', -20)
      .text('Horsepower vs. weight');
      
    };
  
    d3.csv('https://vizhub.com/curran/datasets/auto-mpg.csv').then(data => {
        data.forEach(d => {
        d.mpg = +d.mpg;
        d.cylinders = +d.cylinders;
        d.displacement = +d.displacement;
        d.horsepower = +d.horsepower;
        d.weight = +d.weight;
        d.accelleration = +d.acceleration;
        d.year = +d.year;
      });
      render(data);
    });
  
  }(d3));
